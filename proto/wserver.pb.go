// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wserver.proto

package hagnix

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthRequest struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f2cbb67e27bb8e, []int{0}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *AuthRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f2cbb67e27bb8e, []int{1}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type EmailRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailRequest) Reset()         { *m = EmailRequest{} }
func (m *EmailRequest) String() string { return proto.CompactTextString(m) }
func (*EmailRequest) ProtoMessage()    {}
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f2cbb67e27bb8e, []int{2}
}

func (m *EmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailRequest.Unmarshal(m, b)
}
func (m *EmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailRequest.Marshal(b, m, deterministic)
}
func (m *EmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailRequest.Merge(m, src)
}
func (m *EmailRequest) XXX_Size() int {
	return xxx_messageInfo_EmailRequest.Size(m)
}
func (m *EmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmailRequest proto.InternalMessageInfo

func (m *EmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f2cbb67e27bb8e, []int{3}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Player struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Admin                string   `protobuf:"bytes,3,opt,name=admin,proto3" json:"admin,omitempty"`
	Token                int64    `protobuf:"varint,4,opt,name=token,proto3" json:"token,omitempty"`
	Gold                 int64    `protobuf:"varint,5,opt,name=gold,proto3" json:"gold,omitempty"`
	Password             string   `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Banned               bool     `protobuf:"varint,7,opt,name=banned,proto3" json:"banned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f2cbb67e27bb8e, []int{4}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Player) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Player) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *Player) GetToken() int64 {
	if m != nil {
		return m.Token
	}
	return 0
}

func (m *Player) GetGold() int64 {
	if m != nil {
		return m.Gold
	}
	return 0
}

func (m *Player) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Player) GetBanned() bool {
	if m != nil {
		return m.Banned
	}
	return false
}

type Server struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Players              int64    `protobuf:"varint,2,opt,name=players,proto3" json:"players,omitempty"`
	Capacity             int64    `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Server) Reset()         { *m = Server{} }
func (m *Server) String() string { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()    {}
func (*Server) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f2cbb67e27bb8e, []int{5}
}

func (m *Server) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Server.Unmarshal(m, b)
}
func (m *Server) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Server.Marshal(b, m, deterministic)
}
func (m *Server) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Server.Merge(m, src)
}
func (m *Server) XXX_Size() int {
	return xxx_messageInfo_Server.Size(m)
}
func (m *Server) XXX_DiscardUnknown() {
	xxx_messageInfo_Server.DiscardUnknown(m)
}

var xxx_messageInfo_Server proto.InternalMessageInfo

func (m *Server) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Server) GetPlayers() int64 {
	if m != nil {
		return m.Players
	}
	return 0
}

func (m *Server) GetCapacity() int64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

type ListPlayersResponse struct {
	Players              []*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListPlayersResponse) Reset()         { *m = ListPlayersResponse{} }
func (m *ListPlayersResponse) String() string { return proto.CompactTextString(m) }
func (*ListPlayersResponse) ProtoMessage()    {}
func (*ListPlayersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f2cbb67e27bb8e, []int{6}
}

func (m *ListPlayersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPlayersResponse.Unmarshal(m, b)
}
func (m *ListPlayersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPlayersResponse.Marshal(b, m, deterministic)
}
func (m *ListPlayersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPlayersResponse.Merge(m, src)
}
func (m *ListPlayersResponse) XXX_Size() int {
	return xxx_messageInfo_ListPlayersResponse.Size(m)
}
func (m *ListPlayersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPlayersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPlayersResponse proto.InternalMessageInfo

func (m *ListPlayersResponse) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type KickRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KickRequest) Reset()         { *m = KickRequest{} }
func (m *KickRequest) String() string { return proto.CompactTextString(m) }
func (*KickRequest) ProtoMessage()    {}
func (*KickRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f2cbb67e27bb8e, []int{7}
}

func (m *KickRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KickRequest.Unmarshal(m, b)
}
func (m *KickRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KickRequest.Marshal(b, m, deterministic)
}
func (m *KickRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KickRequest.Merge(m, src)
}
func (m *KickRequest) XXX_Size() int {
	return xxx_messageInfo_KickRequest.Size(m)
}
func (m *KickRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KickRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KickRequest proto.InternalMessageInfo

func (m *KickRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *KickRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type CreatePlayerRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ObjectId             string   `protobuf:"bytes,3,opt,name=objectId,proto3" json:"objectId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePlayerRequest) Reset()         { *m = CreatePlayerRequest{} }
func (m *CreatePlayerRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePlayerRequest) ProtoMessage()    {}
func (*CreatePlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f2cbb67e27bb8e, []int{8}
}

func (m *CreatePlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePlayerRequest.Unmarshal(m, b)
}
func (m *CreatePlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePlayerRequest.Marshal(b, m, deterministic)
}
func (m *CreatePlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePlayerRequest.Merge(m, src)
}
func (m *CreatePlayerRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePlayerRequest.Size(m)
}
func (m *CreatePlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePlayerRequest proto.InternalMessageInfo

func (m *CreatePlayerRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreatePlayerRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreatePlayerRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

type CharacterStats struct {
	Shots                  int64    `protobuf:"varint,1,opt,name=Shots,proto3" json:"Shots,omitempty"`
	ShotsThatDamage        int64    `protobuf:"varint,2,opt,name=ShotsThatDamage,proto3" json:"ShotsThatDamage,omitempty"`
	SpecialAbilityUses     int64    `protobuf:"varint,3,opt,name=SpecialAbilityUses,proto3" json:"SpecialAbilityUses,omitempty"`
	TilesUncovered         int64    `protobuf:"varint,4,opt,name=TilesUncovered,proto3" json:"TilesUncovered,omitempty"`
	Teleports              int64    `protobuf:"varint,5,opt,name=Teleports,proto3" json:"Teleports,omitempty"`
	PotionsDrunk           int64    `protobuf:"varint,6,opt,name=PotionsDrunk,proto3" json:"PotionsDrunk,omitempty"`
	MonsterKills           int64    `protobuf:"varint,7,opt,name=MonsterKills,proto3" json:"MonsterKills,omitempty"`
	MonsterAssists         int64    `protobuf:"varint,8,opt,name=MonsterAssists,proto3" json:"MonsterAssists,omitempty"`
	GodKills               int64    `protobuf:"varint,9,opt,name=GodKills,proto3" json:"GodKills,omitempty"`
	GodAssists             int64    `protobuf:"varint,10,opt,name=GodAssists,proto3" json:"GodAssists,omitempty"`
	CubeKills              int64    `protobuf:"varint,11,opt,name=CubeKills,proto3" json:"CubeKills,omitempty"`
	OryxKills              int64    `protobuf:"varint,12,opt,name=OryxKills,proto3" json:"OryxKills,omitempty"`
	QuestsCompleted        int64    `protobuf:"varint,13,opt,name=QuestsCompleted,proto3" json:"QuestsCompleted,omitempty"`
	PirateCavesCompleted   int64    `protobuf:"varint,14,opt,name=PirateCavesCompleted,proto3" json:"PirateCavesCompleted,omitempty"`
	UndeadLairsCompleted   int64    `protobuf:"varint,15,opt,name=UndeadLairsCompleted,proto3" json:"UndeadLairsCompleted,omitempty"`
	AbyssOfDemonsCompleted int64    `protobuf:"varint,16,opt,name=AbyssOfDemonsCompleted,proto3" json:"AbyssOfDemonsCompleted,omitempty"`
	SnakePitsCompleted     int64    `protobuf:"varint,17,opt,name=SnakePitsCompleted,proto3" json:"SnakePitsCompleted,omitempty"`
	SpiderDensCompleted    int64    `protobuf:"varint,18,opt,name=SpiderDensCompleted,proto3" json:"SpiderDensCompleted,omitempty"`
	SpriteWorldsCompleted  int64    `protobuf:"varint,19,opt,name=SpriteWorldsCompleted,proto3" json:"SpriteWorldsCompleted,omitempty"`
	LevelUpAssists         int64    `protobuf:"varint,20,opt,name=LevelUpAssists,proto3" json:"LevelUpAssists,omitempty"`
	MinutesActive          int64    `protobuf:"varint,21,opt,name=MinutesActive,proto3" json:"MinutesActive,omitempty"`
	TombsCompleted         int64    `protobuf:"varint,22,opt,name=TombsCompleted,proto3" json:"TombsCompleted,omitempty"`
	TrenchesCompleted      int64    `protobuf:"varint,23,opt,name=TrenchesCompleted,proto3" json:"TrenchesCompleted,omitempty"`
	JunglesCompleted       int64    `protobuf:"varint,24,opt,name=JunglesCompleted,proto3" json:"JunglesCompleted,omitempty"`
	ManorsCompleted        int64    `protobuf:"varint,25,opt,name=ManorsCompleted,proto3" json:"ManorsCompleted,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CharacterStats) Reset()         { *m = CharacterStats{} }
func (m *CharacterStats) String() string { return proto.CompactTextString(m) }
func (*CharacterStats) ProtoMessage()    {}
func (*CharacterStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f2cbb67e27bb8e, []int{9}
}

func (m *CharacterStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CharacterStats.Unmarshal(m, b)
}
func (m *CharacterStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CharacterStats.Marshal(b, m, deterministic)
}
func (m *CharacterStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CharacterStats.Merge(m, src)
}
func (m *CharacterStats) XXX_Size() int {
	return xxx_messageInfo_CharacterStats.Size(m)
}
func (m *CharacterStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CharacterStats.DiscardUnknown(m)
}

var xxx_messageInfo_CharacterStats proto.InternalMessageInfo

func (m *CharacterStats) GetShots() int64 {
	if m != nil {
		return m.Shots
	}
	return 0
}

func (m *CharacterStats) GetShotsThatDamage() int64 {
	if m != nil {
		return m.ShotsThatDamage
	}
	return 0
}

func (m *CharacterStats) GetSpecialAbilityUses() int64 {
	if m != nil {
		return m.SpecialAbilityUses
	}
	return 0
}

func (m *CharacterStats) GetTilesUncovered() int64 {
	if m != nil {
		return m.TilesUncovered
	}
	return 0
}

func (m *CharacterStats) GetTeleports() int64 {
	if m != nil {
		return m.Teleports
	}
	return 0
}

func (m *CharacterStats) GetPotionsDrunk() int64 {
	if m != nil {
		return m.PotionsDrunk
	}
	return 0
}

func (m *CharacterStats) GetMonsterKills() int64 {
	if m != nil {
		return m.MonsterKills
	}
	return 0
}

func (m *CharacterStats) GetMonsterAssists() int64 {
	if m != nil {
		return m.MonsterAssists
	}
	return 0
}

func (m *CharacterStats) GetGodKills() int64 {
	if m != nil {
		return m.GodKills
	}
	return 0
}

func (m *CharacterStats) GetGodAssists() int64 {
	if m != nil {
		return m.GodAssists
	}
	return 0
}

func (m *CharacterStats) GetCubeKills() int64 {
	if m != nil {
		return m.CubeKills
	}
	return 0
}

func (m *CharacterStats) GetOryxKills() int64 {
	if m != nil {
		return m.OryxKills
	}
	return 0
}

func (m *CharacterStats) GetQuestsCompleted() int64 {
	if m != nil {
		return m.QuestsCompleted
	}
	return 0
}

func (m *CharacterStats) GetPirateCavesCompleted() int64 {
	if m != nil {
		return m.PirateCavesCompleted
	}
	return 0
}

func (m *CharacterStats) GetUndeadLairsCompleted() int64 {
	if m != nil {
		return m.UndeadLairsCompleted
	}
	return 0
}

func (m *CharacterStats) GetAbyssOfDemonsCompleted() int64 {
	if m != nil {
		return m.AbyssOfDemonsCompleted
	}
	return 0
}

func (m *CharacterStats) GetSnakePitsCompleted() int64 {
	if m != nil {
		return m.SnakePitsCompleted
	}
	return 0
}

func (m *CharacterStats) GetSpiderDensCompleted() int64 {
	if m != nil {
		return m.SpiderDensCompleted
	}
	return 0
}

func (m *CharacterStats) GetSpriteWorldsCompleted() int64 {
	if m != nil {
		return m.SpriteWorldsCompleted
	}
	return 0
}

func (m *CharacterStats) GetLevelUpAssists() int64 {
	if m != nil {
		return m.LevelUpAssists
	}
	return 0
}

func (m *CharacterStats) GetMinutesActive() int64 {
	if m != nil {
		return m.MinutesActive
	}
	return 0
}

func (m *CharacterStats) GetTombsCompleted() int64 {
	if m != nil {
		return m.TombsCompleted
	}
	return 0
}

func (m *CharacterStats) GetTrenchesCompleted() int64 {
	if m != nil {
		return m.TrenchesCompleted
	}
	return 0
}

func (m *CharacterStats) GetJunglesCompleted() int64 {
	if m != nil {
		return m.JunglesCompleted
	}
	return 0
}

func (m *CharacterStats) GetManorsCompleted() int64 {
	if m != nil {
		return m.ManorsCompleted
	}
	return 0
}

func init() {
	proto.RegisterType((*AuthRequest)(nil), "hagnix.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "hagnix.AuthResponse")
	proto.RegisterType((*EmailRequest)(nil), "hagnix.EmailRequest")
	proto.RegisterType((*Empty)(nil), "hagnix.Empty")
	proto.RegisterType((*Player)(nil), "hagnix.Player")
	proto.RegisterType((*Server)(nil), "hagnix.Server")
	proto.RegisterType((*ListPlayersResponse)(nil), "hagnix.ListPlayersResponse")
	proto.RegisterType((*KickRequest)(nil), "hagnix.KickRequest")
	proto.RegisterType((*CreatePlayerRequest)(nil), "hagnix.CreatePlayerRequest")
	proto.RegisterType((*CharacterStats)(nil), "hagnix.CharacterStats")
}

func init() { proto.RegisterFile("wserver.proto", fileDescriptor_d4f2cbb67e27bb8e) }

var fileDescriptor_d4f2cbb67e27bb8e = []byte{
	// 911 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xff, 0x6e, 0x1b, 0x45,
	0x10, 0x8e, 0x71, 0xe2, 0xd8, 0x63, 0x27, 0x69, 0xd7, 0x69, 0x38, 0x02, 0x42, 0xd1, 0xa9, 0x42,
	0x16, 0x82, 0x80, 0x5c, 0x8a, 0x10, 0x55, 0x85, 0x8c, 0x5d, 0x59, 0xa5, 0x89, 0x6a, 0xec, 0x44,
	0xfc, 0xbd, 0xbe, 0x9b, 0xda, 0x4b, 0xce, 0xbb, 0xc7, 0xee, 0xda, 0xad, 0x79, 0x04, 0x1e, 0x81,
	0x07, 0xe0, 0x39, 0xd1, 0xee, 0xde, 0x9d, 0xef, 0xec, 0x6b, 0xa4, 0xfc, 0x77, 0xf3, 0xcd, 0x7c,
	0xbb, 0xf3, 0xe3, 0xd3, 0xec, 0xc1, 0xd1, 0x7b, 0x85, 0x72, 0x85, 0xf2, 0x32, 0x96, 0x42, 0x0b,
	0x52, 0x9b, 0xd3, 0x19, 0x67, 0x1f, 0xfc, 0x97, 0xd0, 0xec, 0x2d, 0xf5, 0x7c, 0x8c, 0x7f, 0x2d,
	0x51, 0x69, 0x42, 0x60, 0x7f, 0xa9, 0x50, 0x7a, 0x95, 0x8b, 0x4a, 0xa7, 0x31, 0xb6, 0xdf, 0xe4,
	0x1c, 0xea, 0x31, 0x55, 0xea, 0xbd, 0x90, 0xa1, 0xf7, 0x89, 0xc5, 0x33, 0xdb, 0x7f, 0x0a, 0x2d,
	0x47, 0x57, 0xb1, 0xe0, 0x0a, 0xc9, 0x29, 0x1c, 0x68, 0x71, 0x87, 0x3c, 0x39, 0xc0, 0x19, 0x26,
	0xea, 0xd5, 0x82, 0xb2, 0x28, 0xbd, 0xe5, 0x14, 0x0e, 0xd0, 0xd8, 0x69, 0x94, 0x35, 0xfc, 0x43,
	0x38, 0x78, 0xb5, 0x88, 0xf5, 0xda, 0xff, 0xaf, 0x02, 0xb5, 0x51, 0x44, 0xd7, 0x28, 0xcb, 0x23,
	0x4d, 0x96, 0x9c, 0x2e, 0x30, 0xc9, 0xc6, 0x7e, 0x9b, 0x48, 0x1a, 0x2e, 0x18, 0xf7, 0xaa, 0x2e,
	0xd2, 0x1a, 0x9b, 0x7c, 0xf6, 0x2f, 0x2a, 0x9d, 0x6a, 0x92, 0x8f, 0xe1, 0xcf, 0x44, 0x14, 0x7a,
	0x07, 0x16, 0xb4, 0xdf, 0x85, 0x2a, 0x6b, 0xc5, 0x2a, 0xc9, 0x19, 0xd4, 0xa6, 0x94, 0x73, 0x0c,
	0xbd, 0xc3, 0x8b, 0x4a, 0xa7, 0x3e, 0x4e, 0x2c, 0x7f, 0x0c, 0xb5, 0x89, 0x6d, 0x6a, 0x96, 0x51,
	0x25, 0x97, 0x91, 0x07, 0x87, 0xb1, 0xad, 0x42, 0xd9, 0x44, 0xab, 0xe3, 0xd4, 0x34, 0x77, 0x05,
	0x34, 0xa6, 0x01, 0xd3, 0x6b, 0x9b, 0x6e, 0x75, 0x9c, 0xd9, 0xfe, 0x2f, 0xd0, 0xbe, 0x62, 0x4a,
	0xbb, 0xfa, 0x55, 0xd6, 0xd8, 0xce, 0xe6, 0xb0, 0xca, 0x45, 0xb5, 0xd3, 0xec, 0x1e, 0x5f, 0xba,
	0x09, 0x5e, 0xba, 0xc8, 0xec, 0x70, 0xff, 0x05, 0x34, 0xdf, 0xb0, 0xe0, 0xee, 0xde, 0x5e, 0x9b,
	0x8a, 0x24, 0x52, 0x25, 0x78, 0xd2, 0xc3, 0xc4, 0xf2, 0x03, 0x68, 0xf7, 0x25, 0x52, 0x8d, 0xc9,
	0xa9, 0xf7, 0x1e, 0x72, 0x8f, 0x30, 0x8c, 0x4f, 0x4c, 0xff, 0xc4, 0x40, 0xbf, 0x0e, 0x93, 0x89,
	0x64, 0xb6, 0xff, 0x4f, 0x1d, 0x8e, 0xfb, 0x73, 0x2a, 0x69, 0xa0, 0x51, 0x4e, 0x34, 0xd5, 0xca,
	0x5c, 0x30, 0x99, 0x0b, 0xad, 0xec, 0x05, 0xd5, 0xb1, 0x33, 0x48, 0x07, 0x4e, 0xec, 0xc7, 0xcd,
	0x9c, 0xea, 0x01, 0x5d, 0xd0, 0x19, 0x26, 0x9d, 0xdc, 0x86, 0xc9, 0x25, 0x90, 0x49, 0x8c, 0x01,
	0xa3, 0x51, 0x6f, 0xca, 0x22, 0xa6, 0xd7, 0xb7, 0x0a, 0x55, 0xd2, 0xdb, 0x12, 0x0f, 0xf9, 0x0a,
	0x8e, 0x6f, 0x58, 0x84, 0xea, 0x96, 0x07, 0x62, 0x85, 0x12, 0xc3, 0x44, 0x20, 0x5b, 0x28, 0xf9,
	0x02, 0x1a, 0x37, 0x18, 0x61, 0x2c, 0xa4, 0x56, 0x89, 0x5c, 0x36, 0x00, 0xf1, 0xa1, 0x35, 0x12,
	0x9a, 0x09, 0xae, 0x06, 0x72, 0xc9, 0xef, 0xac, 0x6e, 0xaa, 0xe3, 0x02, 0x66, 0x62, 0xae, 0x05,
	0x57, 0x1a, 0xe5, 0x1b, 0x16, 0x45, 0xca, 0x2a, 0xa8, 0x3a, 0x2e, 0x60, 0x26, 0x9b, 0xc4, 0xee,
	0x29, 0xc5, 0x94, 0x56, 0x5e, 0xdd, 0x65, 0x53, 0x44, 0x4d, 0x53, 0x87, 0x22, 0x74, 0xe7, 0x34,
	0x9c, 0x6e, 0x52, 0x9b, 0x7c, 0x09, 0x30, 0x14, 0x61, 0xca, 0x07, 0xeb, 0xcd, 0x21, 0xa6, 0x92,
	0xfe, 0x72, 0x8a, 0x8e, 0xdc, 0x74, 0x95, 0x64, 0x80, 0xf1, 0xbe, 0x95, 0xeb, 0x0f, 0xce, 0xdb,
	0x72, 0xde, 0x0c, 0x30, 0x73, 0xf8, 0xdd, 0xe8, 0x40, 0xf5, 0xc5, 0x22, 0x8e, 0x50, 0x63, 0xe8,
	0x1d, 0xb9, 0x39, 0x6c, 0xc1, 0xa4, 0x0b, 0xa7, 0x23, 0x26, 0xa9, 0xc6, 0x3e, 0x5d, 0x61, 0x2e,
	0xfc, 0xd8, 0x86, 0x97, 0xfa, 0x0c, 0xe7, 0x96, 0x87, 0x48, 0xc3, 0x2b, 0xca, 0x64, 0x8e, 0x73,
	0xe2, 0x38, 0x65, 0x3e, 0xf2, 0x23, 0x9c, 0xf5, 0xa6, 0x6b, 0xa5, 0xde, 0xbe, 0x1b, 0xe0, 0x42,
	0xf0, 0x1c, 0xeb, 0x91, 0x65, 0x7d, 0xc4, 0x6b, 0x75, 0xc2, 0xe9, 0x1d, 0x8e, 0x58, 0xbe, 0x98,
	0xc7, 0x89, 0x4e, 0x76, 0x3c, 0xe4, 0x7b, 0x68, 0x4f, 0x62, 0x16, 0xa2, 0x1c, 0x60, 0xfe, 0x12,
	0x62, 0x09, 0x65, 0x2e, 0xf2, 0x03, 0x3c, 0x99, 0xc4, 0x92, 0x69, 0xfc, 0x43, 0xc8, 0x28, 0xcc,
	0x71, 0xda, 0x96, 0x53, 0xee, 0x34, 0x0a, 0xb8, 0xc2, 0x15, 0x46, 0xb7, 0x71, 0x3a, 0xc1, 0x53,
	0xa7, 0x80, 0x22, 0x4a, 0x9e, 0xc2, 0xd1, 0x35, 0xe3, 0x4b, 0x8d, 0xaa, 0x17, 0x68, 0xb6, 0x42,
	0xef, 0x89, 0x0d, 0x2b, 0x82, 0x56, 0xdd, 0x62, 0x31, 0xcd, 0x5d, 0x7e, 0x96, 0xa8, 0xbb, 0x80,
	0x92, 0x6f, 0xe0, 0xf1, 0x8d, 0x44, 0x1e, 0xcc, 0xf3, 0xa3, 0xfa, 0xd4, 0x86, 0xee, 0x3a, 0xc8,
	0xd7, 0xf0, 0xe8, 0xb7, 0x25, 0x9f, 0x45, 0xf9, 0x60, 0xcf, 0x06, 0xef, 0xe0, 0x46, 0x31, 0xd7,
	0x94, 0x8b, 0xfc, 0x38, 0x3f, 0x73, 0x8a, 0xd9, 0x82, 0xbb, 0xff, 0x1e, 0xc0, 0xfe, 0xd0, 0xac,
	0xcb, 0x2e, 0x80, 0xd9, 0x5b, 0xc9, 0xe2, 0x6f, 0xa7, 0xeb, 0x2d, 0xb7, 0xcb, 0xce, 0x8f, 0x52,
	0xd0, 0xbd, 0x13, 0x7b, 0xe4, 0x05, 0x34, 0x73, 0xcb, 0x92, 0x14, 0xfd, 0xe7, 0x9f, 0xa7, 0x66,
	0xc9, 0x42, 0xf5, 0xf7, 0xc8, 0x33, 0x68, 0x0c, 0x51, 0xa7, 0x0f, 0xcd, 0x86, 0xba, 0x79, 0xa8,
	0xce, 0xb7, 0x96, 0xac, 0xbf, 0x47, 0xba, 0xd0, 0xf8, 0x95, 0xf2, 0x7b, 0x49, 0x3b, 0x59, 0x3e,
	0x87, 0xd6, 0x88, 0xca, 0x50, 0x3c, 0x9c, 0x76, 0x25, 0x66, 0x33, 0x0c, 0x1f, 0x46, 0xfb, 0x09,
	0x4e, 0xcc, 0x93, 0x2c, 0x24, 0xfb, 0x1b, 0x1f, 0xc6, 0x7c, 0x09, 0xad, 0xfc, 0xf2, 0x27, 0x59,
	0xff, 0x4a, 0x9e, 0x84, 0x92, 0xd6, 0x3c, 0x87, 0xd6, 0x00, 0xcd, 0x50, 0x1f, 0x76, 0xeb, 0x77,
	0xd0, 0xea, 0xcf, 0x29, 0x9f, 0xa5, 0xb4, 0xad, 0x83, 0x77, 0x09, 0xdf, 0x02, 0xb8, 0x57, 0xf7,
	0x35, 0x7f, 0x27, 0xb6, 0x67, 0x9e, 0xb1, 0x5d, 0x88, 0xbf, 0x47, 0x7e, 0x86, 0xfa, 0x10, 0x75,
	0xf2, 0xcc, 0x94, 0xa6, 0x74, 0x96, 0xd5, 0x59, 0x78, 0x94, 0xfc, 0xbd, 0x69, 0xcd, 0xfe, 0x2c,
	0x3d, 0xfb, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x56, 0xdf, 0x51, 0x8e, 0x3d, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameClient is the client API for Game service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameClient interface {
	KickPlayer(ctx context.Context, in *KickRequest, opts ...grpc.CallOption) (*Empty, error)
	ListPlayers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListPlayersResponse, error)
	GetPlayer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Player, error)
	BanPlayer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Empty, error)
	PardonPlayer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Empty, error)
	LoggedPlayer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Empty, error)
	AuthorizePlayer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Empty, error)
	CreatePlayer(ctx context.Context, in *CreatePlayerRequest, opts ...grpc.CallOption) (*Player, error)
	DeletePlayer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Empty, error)
	ChangePlayer(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Empty, error)
	ServerInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Server, error)
	GetStats(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*CharacterStats, error)
}

type gameClient struct {
	cc *grpc.ClientConn
}

func NewGameClient(cc *grpc.ClientConn) GameClient {
	return &gameClient{cc}
}

func (c *gameClient) KickPlayer(ctx context.Context, in *KickRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/hagnix.Game/KickPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) ListPlayers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListPlayersResponse, error) {
	out := new(ListPlayersResponse)
	err := c.cc.Invoke(ctx, "/hagnix.Game/ListPlayers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) GetPlayer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Player, error) {
	out := new(Player)
	err := c.cc.Invoke(ctx, "/hagnix.Game/GetPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) BanPlayer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/hagnix.Game/BanPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) PardonPlayer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/hagnix.Game/PardonPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) LoggedPlayer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/hagnix.Game/LoggedPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) AuthorizePlayer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/hagnix.Game/AuthorizePlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) CreatePlayer(ctx context.Context, in *CreatePlayerRequest, opts ...grpc.CallOption) (*Player, error) {
	out := new(Player)
	err := c.cc.Invoke(ctx, "/hagnix.Game/CreatePlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) DeletePlayer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/hagnix.Game/DeletePlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) ChangePlayer(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/hagnix.Game/ChangePlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) ServerInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Server, error) {
	out := new(Server)
	err := c.cc.Invoke(ctx, "/hagnix.Game/ServerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) GetStats(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*CharacterStats, error) {
	out := new(CharacterStats)
	err := c.cc.Invoke(ctx, "/hagnix.Game/GetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameServer is the server API for Game service.
type GameServer interface {
	KickPlayer(context.Context, *KickRequest) (*Empty, error)
	ListPlayers(context.Context, *Empty) (*ListPlayersResponse, error)
	GetPlayer(context.Context, *EmailRequest) (*Player, error)
	BanPlayer(context.Context, *EmailRequest) (*Empty, error)
	PardonPlayer(context.Context, *EmailRequest) (*Empty, error)
	LoggedPlayer(context.Context, *EmailRequest) (*Empty, error)
	AuthorizePlayer(context.Context, *EmailRequest) (*Empty, error)
	CreatePlayer(context.Context, *CreatePlayerRequest) (*Player, error)
	DeletePlayer(context.Context, *EmailRequest) (*Empty, error)
	ChangePlayer(context.Context, *Player) (*Empty, error)
	ServerInfo(context.Context, *Empty) (*Server, error)
	GetStats(context.Context, *EmailRequest) (*CharacterStats, error)
}

func RegisterGameServer(s *grpc.Server, srv GameServer) {
	s.RegisterService(&_Game_serviceDesc, srv)
}

func _Game_KickPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KickRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).KickPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hagnix.Game/KickPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).KickPlayer(ctx, req.(*KickRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_ListPlayers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).ListPlayers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hagnix.Game/ListPlayers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).ListPlayers(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_GetPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).GetPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hagnix.Game/GetPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).GetPlayer(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_BanPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).BanPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hagnix.Game/BanPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).BanPlayer(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_PardonPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).PardonPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hagnix.Game/PardonPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).PardonPlayer(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_LoggedPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).LoggedPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hagnix.Game/LoggedPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).LoggedPlayer(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_AuthorizePlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).AuthorizePlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hagnix.Game/AuthorizePlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).AuthorizePlayer(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_CreatePlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).CreatePlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hagnix.Game/CreatePlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).CreatePlayer(ctx, req.(*CreatePlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_DeletePlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).DeletePlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hagnix.Game/DeletePlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).DeletePlayer(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_ChangePlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Player)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).ChangePlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hagnix.Game/ChangePlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).ChangePlayer(ctx, req.(*Player))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_ServerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).ServerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hagnix.Game/ServerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).ServerInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hagnix.Game/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).GetStats(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Game_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hagnix.Game",
	HandlerType: (*GameServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KickPlayer",
			Handler:    _Game_KickPlayer_Handler,
		},
		{
			MethodName: "ListPlayers",
			Handler:    _Game_ListPlayers_Handler,
		},
		{
			MethodName: "GetPlayer",
			Handler:    _Game_GetPlayer_Handler,
		},
		{
			MethodName: "BanPlayer",
			Handler:    _Game_BanPlayer_Handler,
		},
		{
			MethodName: "PardonPlayer",
			Handler:    _Game_PardonPlayer_Handler,
		},
		{
			MethodName: "LoggedPlayer",
			Handler:    _Game_LoggedPlayer_Handler,
		},
		{
			MethodName: "AuthorizePlayer",
			Handler:    _Game_AuthorizePlayer_Handler,
		},
		{
			MethodName: "CreatePlayer",
			Handler:    _Game_CreatePlayer_Handler,
		},
		{
			MethodName: "DeletePlayer",
			Handler:    _Game_DeletePlayer_Handler,
		},
		{
			MethodName: "ChangePlayer",
			Handler:    _Game_ChangePlayer_Handler,
		},
		{
			MethodName: "ServerInfo",
			Handler:    _Game_ServerInfo_Handler,
		},
		{
			MethodName: "GetStats",
			Handler:    _Game_GetStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wserver.proto",
}
